/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.espe.academygradesystemfrm.view;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import ec.edu.espe.academygradesystemfrm.controller.DeleteStudentGradeController;
import ec.edu.espe.academygradesystemfrm.utils.GradeToMongo;
import java.awt.Color;
import javax.swing.JOptionPane;
import org.bson.Document;

/**
 *
 * @author WINDOWS
 */
public class FrmUpdateStudentGrade extends javax.swing.JFrame {

    /**
     * Creates new form FrmUpdateStudentGrade
     */
    public FrmUpdateStudentGrade() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textFieldPrimerParcial = new javax.swing.JTextField();
        textFieldSegundoParcial = new javax.swing.JTextField();
        textFieldTercerParcial = new javax.swing.JTextField();
        comboBoxMateria = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldStudentId = new javax.swing.JTextField();
        lblPromedio = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        LoadStudent = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ACTUALIZAR NOTAS DEL ESTUDIANTE");

        textFieldSegundoParcial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSegundoParcialActionPerformed(evt);
            }
        });

        comboBoxMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "POO", "Edo", "Fisica" }));

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jButton2.setText("Academy Grade System");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nuevo Promedio:");

        jLabel3.setText("Estado del Alumno:");

        jLabel4.setText("Id del estudiante a modificar notas:");

        lblPromedio.setText("El nuevo promedio es...");

        lblEstado.setText("el estudiante est√°...");

        LoadStudent.setText("Cargar Estudiante");
        LoadStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadStudentActionPerformed(evt);
            }
        });

        jLabel5.setText("Materia:");

        jLabel6.setText("Primer Parcial:");

        jLabel7.setText("Segundo Parcial:");

        jLabel8.setText("Tercer Parcial:");

        jButton3.setText("Calcular nuevo Promedio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldPrimerParcial)
                                    .addComponent(textFieldStudentId)
                                    .addComponent(textFieldSegundoParcial)
                                    .addComponent(textFieldTercerParcial, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jButton2)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(LoadStudent)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)))))
                        .addGap(11, 11, 11))))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPromedio)
                    .addComponent(lblEstado))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LoadStudent)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(comboBoxMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldPrimerParcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldSegundoParcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldTercerParcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblPromedio))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblEstado))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldSegundoParcialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSegundoParcialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSegundoParcialActionPerformed

    private void LoadStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadStudentActionPerformed
        String studentId = textFieldStudentId.getText().trim();

        if (studentId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID del estudiante.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (MongoClient mongoClient = MongoClients.create("mongodb+srv://jezhe:jezheoop@cluster0.6vuzzwl.mongodb.net/")) {
            MongoDatabase database = mongoClient.getDatabase("AcademyGradeRegister");
            MongoCollection<Document> gradescollection = database.getCollection("grades");

            Document studentDocument = gradescollection.find(Filters.eq("studentId", studentId)).first();

            if (studentDocument != null) {
                String materia = studentDocument.getString("studentId");
                comboBoxMateria.setSelectedItem(materia);
                textFieldPrimerParcial.setText(studentDocument.getDouble("primerParcial").toString());
                textFieldSegundoParcial.setText(studentDocument.getDouble("segundoParcial").toString());
                textFieldTercerParcial.setText(studentDocument.getDouble("tercerParcial").toString());
            } else {
                JOptionPane.showMessageDialog(this, "Estudiante no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_LoadStudentActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FrmAcademyGradeRegister frmAcademyGradeRegiser = new FrmAcademyGradeRegister();
        this.setVisible(false);
        frmAcademyGradeRegiser.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        guardarCalificaciones();
         try {
        String deleteId = textFieldStudentId.getText(); // Obtener el ID como cadena
        DeleteStudentGradeController delete = new DeleteStudentGradeController();
        delete.deleteGrade(deleteId);
        JOptionPane.showMessageDialog(this, "Notas eliminadas exitosamente");        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID inv√°lido. Por favor ingrese un n√∫mero v√°lido.", "Error", JOptionPane.ERROR_MESSAGE);
    }      
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
private void calcularPromedio() {
        try {
            double primerParcial = Double.parseDouble(textFieldPrimerParcial.getText());
            double segundoParcial = Double.parseDouble(textFieldSegundoParcial.getText());
            double tercerParcial = Double.parseDouble(textFieldTercerParcial.getText());

            double promedio = (primerParcial + segundoParcial + tercerParcial) / 3;

            lblPromedio.setText(String.format("%.2f", promedio));

            if (promedio >= 14) {
                lblEstado.setText("Aprobado");
                lblEstado.setForeground(Color.GREEN);
            } else {
                lblEstado.setText("Desaprobado");
                lblEstado.setForeground(Color.RED);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese valores num√©ricos v√°lidos en los parciales.", "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        calcularPromedio();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
private void guardarCalificaciones() {
    try {
        String studentId = textFieldStudentId.getText();
        double primerParcial = Double.parseDouble(textFieldPrimerParcial.getText());
        double segundoParcial = Double.parseDouble(textFieldSegundoParcial.getText());
        double tercerParcial = Double.parseDouble(textFieldTercerParcial.getText());
        String materia = comboBoxMateria.getSelectedItem().toString();
        double promedio = (primerParcial + segundoParcial + tercerParcial) / 3;
        String estado = promedio >= 14 ? "Aprobado" : "Desaprobado";

        GradeToMongo.uploadGradeData(studentId, materia, primerParcial, segundoParcial, tercerParcial, promedio, estado);

        JOptionPane.showMessageDialog(this, "Calificaciones guardadas exitosamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese valores num√©ricos v√°lidos en los parciales.", "Error de entrada", JOptionPane.ERROR_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
}       
     private void btnCalcularPromedioActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // Calcular el promedio y mostrar el estado
        try {
            float primerParcial = Float.parseFloat(textFieldPrimerParcial.getText());
            float segundoParcial = Float.parseFloat(textFieldSegundoParcial.getText());
            float tercerParcial = Float.parseFloat(textFieldTercerParcial.getText());

            float promedio = (primerParcial + segundoParcial + tercerParcial) / 3;
            lblPromedio.setText(String.format("El promedio es: %.2f", promedio));

            if (promedio >= 14.0) {
                lblEstado.setText("El estudiante est√° Aprobado");
                lblEstado.setForeground(Color.GREEN);
            } else {
                lblEstado.setText("El estudiante est√° Reprobado");
                lblEstado.setForeground(Color.RED);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese n√∫meros v√°lidos en los parciales.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                                   

    
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Actualizar los datos del estudiante
        String studentId = textFieldStudentId.getText().trim();

        if (studentId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el ID del estudiante.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String materia = comboBoxMateria.getSelectedItem().toString();
        double primerParcial, segundoParcial, tercerParcial;

        try {
            primerParcial = Double.parseDouble(textFieldPrimerParcial.getText());
            segundoParcial = Double.parseDouble(textFieldSegundoParcial.getText());
            tercerParcial = Double.parseDouble(textFieldTercerParcial.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese n√∫meros v√°lidos en los parciales.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (MongoClient mongoClient = MongoClients.create("mongodb+srv://jezhe:jezheoop@cluster0.6vuzzwl.mongodb.net/")) {
            MongoDatabase database = mongoClient.getDatabase("AcademyGradeRegister");
            MongoCollection<Document> collection = database.getCollection("students");

            Document updatedData = new Document("materia", materia)
                    .append("primerParcial", primerParcial)
                    .append("segundoParcial", segundoParcial)
                    .append("tercerParcial", tercerParcial);

            collection.updateOne(Filters.eq("id", studentId), new Document("$set", updatedData));

            JOptionPane.showMessageDialog(this, "Datos actualizados correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateStudentGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateStudentGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateStudentGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateStudentGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUpdateStudentGrade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoadStudent;
    private javax.swing.JComboBox<String> comboBoxMateria;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblPromedio;
    private javax.swing.JTextField textFieldPrimerParcial;
    private javax.swing.JTextField textFieldSegundoParcial;
    private javax.swing.JTextField textFieldStudentId;
    private javax.swing.JTextField textFieldTercerParcial;
    // End of variables declaration//GEN-END:variables
}
